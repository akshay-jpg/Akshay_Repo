pipeline {
    agent any

    stages {
        stage('Retrieve Latest Image Tag') {
            steps {
                script {
                    env.IMAGE_TAG = readFile('latest_image_tag.txt').trim()
                    echo "Retrieved Image Tag: ${env.IMAGE_TAG}"
                }
            }
        }

        stage('Update Manifest File in Mega-Project-CD') {
    steps {
        script {
            cleanWs()
            withCredentials([usernamePassword(credentialsId: 'git-cred', usernameVariable: 'GIT_USERNAME', passwordVariable: 'GIT_PASSWORD')]) {
                sh '''
                   git clone https://${GIT_USERNAME}:${GIT_PASSWORD}@github.com/jaiswaladi246/Multi-Tier-Chat-CD.git
                   cd Multi-Tier-Chat-CD

                   # Create a feature branch
                   BRANCH_NAME="update-image-${BUILD_NUMBER}"
                   git checkout -b $BRANCH_NAME

                   # Update the image tag using 'yq' (Recommended for YAML)
                   sed -i "s|akshaybajait/boardshack:.*|akshaybajait/boardshack:${env.IMAGE_TAG}|" Manifest/manifest.yml

                   echo "Updated manifest file contents:"
                   cat Manifest/manifest.yml

                   # Add, commit, and push changes
                   git add Manifest/manifest.yml
                   git commit -m "Update image tag to ${IMAGE_TAG}"
                   git push origin $BRANCH_NAME

                   # Create a pull request (example using GitHub CLI)
                   gh pr create --title "Update Image Tag to ${IMAGE_TAG}" --body "Automated update via Jenkins" --base prod --head $BRANCH_NAME
                '''
            }
        }
    }
}

        }
    }
}
